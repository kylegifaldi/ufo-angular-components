{"hash":"3aa6bb0a64dbd507b4e731cac61d90e2fa21758a750da4ce1ca27e8e673de39a","fesm2022":[{"exports":["ChromiumInspiredTabsLibComponent","ChromiumInspiredTabsLibService"],"facadeModuleId":"C:\\Users\\kyler\\git\\ufo-angular-components\\dist\\chromium-inspired-tabs-lib\\esm2022\\chromium-inspired-tabs-lib.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["C:/Users/kyler/git/ufo-angular-components/dist/chromium-inspired-tabs-lib/esm2022/lib/chromium-inspired-tabs-lib.service.mjs","C:/Users/kyler/git/ufo-angular-components/dist/chromium-inspired-tabs-lib/esm2022/lib/chromium-inspired-tabs-lib.component.mjs","C:/Users/kyler/git/ufo-angular-components/dist/chromium-inspired-tabs-lib/esm2022/public-api.mjs","C:\\Users\\kyler\\git\\ufo-angular-components\\dist\\chromium-inspired-tabs-lib\\esm2022\\chromium-inspired-tabs-lib.mjs"],"name":"chromium-inspired-tabs-lib","type":"chunk","dynamicImports":[],"fileName":"chromium-inspired-tabs-lib.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["*","Injectable","EventEmitter","Output","Input","Component"],"@angular/common":["CommonModule","*"],"@angular/material/icon":["MatIconModule","*"],"@angular/animations":["trigger","state","transition","style","animate"],"rxjs":["Subscription","Observable"],"@angular/forms":["FormsModule"]},"imports":["@angular/core","@angular/common","@angular/material/icon","@angular/animations","rxjs","@angular/forms"],"modules":{"C:/Users/kyler/git/ufo-angular-components/dist/chromium-inspired-tabs-lib/esm2022/lib/chromium-inspired-tabs-lib.service.mjs":{"code":"class ChromiumInspiredTabsLibService {\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [] });","originalLength":1626,"removedExports":[],"renderedExports":["ChromiumInspiredTabsLibService"],"renderedLength":699},"C:/Users/kyler/git/ufo-angular-components/dist/chromium-inspired-tabs-lib/esm2022/lib/chromium-inspired-tabs-lib.component.mjs":{"code":"class ChromiumInspiredTabsLibComponent {\n    subscriptions = new Subscription();\n    tabs = [];\n    focusedTabId = null;\n    tabs$ = new Observable();\n    addTabButtonClick = new EventEmitter();\n    tabClose = new EventEmitter();\n    tabFocus = new EventEmitter();\n    constructor() {\n    }\n    ngOnInit() { }\n    ngAfterViewInit() {\n        this.subscriptions.add(this.tabs$.subscribe(tabs => {\n            this.tabs = tabs;\n        }));\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    addTab() {\n        this.addTabButtonClick.emit(true);\n    }\n    closeTab(tabId) {\n        this.tabClose.emit(tabId);\n    }\n    focusTab(tabId) {\n        this.tabFocus.emit(tabId);\n        this.focusedTabId = tabId;\n    }\n    goHome() {\n        this.focusTab(0);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.7\", type: ChromiumInspiredTabsLibComponent, isStandalone: true, selector: \"chrome-tabs\", inputs: { tabs$: \"tabs$\" }, outputs: { addTabButtonClick: \"addTabButtonClick\", tabClose: \"tabClose\", tabFocus: \"tabFocus\" }, ngImport: i0, template: \"<!-- ADD BUTTON TEMPLATE -->\\r\\n<section class=\\\"gris-background\\\">\\r\\n    <div class=\\\"tab-container\\\">\\r\\n      <ng-container *ngFor=\\\"let tab of tabs\\\">\\r\\n        <button mat-button\\r\\n        color=\\\"accent\\\"\\r\\n        type=\\\"button\\\"\\r\\n        [@slideIn]\\r\\n        [ngClass]=\\\"{'focused-tab': tab.id === focusedTabId}\\\"\\r\\n        (click)=\\\"focusTab(tab.id)\\\">\\r\\n        <mat-icon *ngIf=\\\"tab.isHome\\\">home</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isHistory\\\">history</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isFileTypeMappings\\\">auto_awesome</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isDocumentation\\\">info</mat-icon>\\r\\n        <ng-container>\\r\\n          <span>{{ tab.title }}</span>\\r\\n        </ng-container>\\r\\n          <mat-icon class=\\\"close-icon\\\" *ngIf=\\\"!tab.isHome && !tab.isHistory && !tab.isFileTypeMappings && !tab.isDocumentation\\\" (click)=\\\"closeTab(tab.id)\\\">close</mat-icon>\\r\\n        </button>\\r\\n      </ng-container>\\r\\n      <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"addTab()\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </section>\\r\\n  \", styles: [\".add-tab-button-container{display:flex;margin-left:4px;margin-right:4px;background-color:transparent}.add-tab-button{background-color:transparent;color:#585c5f;border:none;font-size:24px;height:100%;width:2.2rem;font-weight:500;cursor:pointer;box-shadow:-8px 0 0 -7px #0000}.add-tab-button:hover{background-color:#4c4c4c33;color:#585c5f}.tab-container{display:contents;align-items:center;overflow:hidden;white-space:nowrap}.tabs-scroll-container{display:flex;align-items:center;overflow-x:auto;overflow-y:hidden;white-space:nowrap;flex-grow:1}.tabs-scroll-container::-webkit-scrollbar{height:8px}.tabs-scroll-container::-webkit-scrollbar-track{background:#f1f1f1}.tabs-scroll-container::-webkit-scrollbar-thumb{background:#888;border-radius:4px}.tabs-scroll-container::-webkit-scrollbar-thumb:hover{background:#555}button.mat-button{display:flex;align-items:center;border-radius:0}button.mat-button:hover{background-color:#f0f0f0}.focused-tab{background-color:#005cbb;color:#fff!important}mat-icon{margin-left:8px;cursor:pointer}.spacer{flex-grow:1}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 4px)!important;margin-left:var(--mat-text-button-icon-offset, 4px)!important}.close-icon:hover{color:#005cbb;background-color:#fff!important;border-radius:20%}.close-icon{width:20px;height:20px;padding-top:1px;padding-right:1px;float:right}.mat-mdc-button:not(:disabled){display:inline-block}.tab-input{width:75px}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.12rem!important;height:1.12rem!important;width:1.11rem!important}.buttons{display:flex;flex-direction:row;gap:10px;margin-left:8px}.gris-background{background-color:#fff}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }], animations: [\n            trigger('slideIn', [\n                state('void', style({ transform: 'translateY(100%)', opacity: 0 })),\n                transition(':enter', [\n                    animate('300ms ease-out', style({ transform: 'translateY(0)', opacity: 1 }))\n                ]),\n                transition(':leave', [\n                    animate('300ms ease-in', style({ transform: 'translateY(100%)', opacity: 0 }))\n                ])\n            ])\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'chrome-tabs', standalone: true, imports: [\n                        CommonModule,\n                        MatIconModule,\n                        FormsModule\n                    ], animations: [\n                        trigger('slideIn', [\n                            state('void', style({ transform: 'translateY(100%)', opacity: 0 })),\n                            transition(':enter', [\n                                animate('300ms ease-out', style({ transform: 'translateY(0)', opacity: 1 }))\n                            ]),\n                            transition(':leave', [\n                                animate('300ms ease-in', style({ transform: 'translateY(100%)', opacity: 0 }))\n                            ])\n                        ])\n                    ], template: \"<!-- ADD BUTTON TEMPLATE -->\\r\\n<section class=\\\"gris-background\\\">\\r\\n    <div class=\\\"tab-container\\\">\\r\\n      <ng-container *ngFor=\\\"let tab of tabs\\\">\\r\\n        <button mat-button\\r\\n        color=\\\"accent\\\"\\r\\n        type=\\\"button\\\"\\r\\n        [@slideIn]\\r\\n        [ngClass]=\\\"{'focused-tab': tab.id === focusedTabId}\\\"\\r\\n        (click)=\\\"focusTab(tab.id)\\\">\\r\\n        <mat-icon *ngIf=\\\"tab.isHome\\\">home</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isHistory\\\">history</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isFileTypeMappings\\\">auto_awesome</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isDocumentation\\\">info</mat-icon>\\r\\n        <ng-container>\\r\\n          <span>{{ tab.title }}</span>\\r\\n        </ng-container>\\r\\n          <mat-icon class=\\\"close-icon\\\" *ngIf=\\\"!tab.isHome && !tab.isHistory && !tab.isFileTypeMappings && !tab.isDocumentation\\\" (click)=\\\"closeTab(tab.id)\\\">close</mat-icon>\\r\\n        </button>\\r\\n      </ng-container>\\r\\n      <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"addTab()\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </section>\\r\\n  \", styles: [\".add-tab-button-container{display:flex;margin-left:4px;margin-right:4px;background-color:transparent}.add-tab-button{background-color:transparent;color:#585c5f;border:none;font-size:24px;height:100%;width:2.2rem;font-weight:500;cursor:pointer;box-shadow:-8px 0 0 -7px #0000}.add-tab-button:hover{background-color:#4c4c4c33;color:#585c5f}.tab-container{display:contents;align-items:center;overflow:hidden;white-space:nowrap}.tabs-scroll-container{display:flex;align-items:center;overflow-x:auto;overflow-y:hidden;white-space:nowrap;flex-grow:1}.tabs-scroll-container::-webkit-scrollbar{height:8px}.tabs-scroll-container::-webkit-scrollbar-track{background:#f1f1f1}.tabs-scroll-container::-webkit-scrollbar-thumb{background:#888;border-radius:4px}.tabs-scroll-container::-webkit-scrollbar-thumb:hover{background:#555}button.mat-button{display:flex;align-items:center;border-radius:0}button.mat-button:hover{background-color:#f0f0f0}.focused-tab{background-color:#005cbb;color:#fff!important}mat-icon{margin-left:8px;cursor:pointer}.spacer{flex-grow:1}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 4px)!important;margin-left:var(--mat-text-button-icon-offset, 4px)!important}.close-icon:hover{color:#005cbb;background-color:#fff!important;border-radius:20%}.close-icon{width:20px;height:20px;padding-top:1px;padding-right:1px;float:right}.mat-mdc-button:not(:disabled){display:inline-block}.tab-input{width:75px}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.12rem!important;height:1.12rem!important;width:1.11rem!important}.buttons{display:flex;flex-direction:row;gap:10px;margin-left:8px}.gris-background{background-color:#fff}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { tabs$: [{\n                type: Input\n            }], addTabButtonClick: [{\n                type: Output\n            }], tabClose: [{\n                type: Output\n            }], tabFocus: [{\n                type: Output\n            }] } });","originalLength":18533,"removedExports":[],"renderedExports":["ChromiumInspiredTabsLibComponent"],"renderedLength":9580},"C:/Users/kyler/git/ufo-angular-components/dist/chromium-inspired-tabs-lib/esm2022/public-api.mjs":{"code":"/*\n * Public API Surface of chromium-inspired-tabs-lib\n */","originalLength":791,"removedExports":[],"renderedExports":[],"renderedLength":58},"C:\\Users\\kyler\\git\\ufo-angular-components\\dist\\chromium-inspired-tabs-lib\\esm2022\\chromium-inspired-tabs-lib.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":560,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Output, Input, Component } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport { trigger, state, transition, style, animate } from '@angular/animations';\nimport { Subscription, Observable } from 'rxjs';\nimport { FormsModule } from '@angular/forms';\n\nclass ChromiumInspiredTabsLibService {\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: () => [] });\n\nclass ChromiumInspiredTabsLibComponent {\n    subscriptions = new Subscription();\n    tabs = [];\n    focusedTabId = null;\n    tabs$ = new Observable();\n    addTabButtonClick = new EventEmitter();\n    tabClose = new EventEmitter();\n    tabFocus = new EventEmitter();\n    constructor() {\n    }\n    ngOnInit() { }\n    ngAfterViewInit() {\n        this.subscriptions.add(this.tabs$.subscribe(tabs => {\n            this.tabs = tabs;\n        }));\n    }\n    ngOnDestroy() {\n        this.subscriptions.unsubscribe();\n    }\n    addTab() {\n        this.addTabButtonClick.emit(true);\n    }\n    closeTab(tabId) {\n        this.tabClose.emit(tabId);\n    }\n    focusTab(tabId) {\n        this.tabFocus.emit(tabId);\n        this.focusedTabId = tabId;\n    }\n    goHome() {\n        this.focusTab(0);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.7\", type: ChromiumInspiredTabsLibComponent, isStandalone: true, selector: \"chrome-tabs\", inputs: { tabs$: \"tabs$\" }, outputs: { addTabButtonClick: \"addTabButtonClick\", tabClose: \"tabClose\", tabFocus: \"tabFocus\" }, ngImport: i0, template: \"<!-- ADD BUTTON TEMPLATE -->\\r\\n<section class=\\\"gris-background\\\">\\r\\n    <div class=\\\"tab-container\\\">\\r\\n      <ng-container *ngFor=\\\"let tab of tabs\\\">\\r\\n        <button mat-button\\r\\n        color=\\\"accent\\\"\\r\\n        type=\\\"button\\\"\\r\\n        [@slideIn]\\r\\n        [ngClass]=\\\"{'focused-tab': tab.id === focusedTabId}\\\"\\r\\n        (click)=\\\"focusTab(tab.id)\\\">\\r\\n        <mat-icon *ngIf=\\\"tab.isHome\\\">home</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isHistory\\\">history</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isFileTypeMappings\\\">auto_awesome</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isDocumentation\\\">info</mat-icon>\\r\\n        <ng-container>\\r\\n          <span>{{ tab.title }}</span>\\r\\n        </ng-container>\\r\\n          <mat-icon class=\\\"close-icon\\\" *ngIf=\\\"!tab.isHome && !tab.isHistory && !tab.isFileTypeMappings && !tab.isDocumentation\\\" (click)=\\\"closeTab(tab.id)\\\">close</mat-icon>\\r\\n        </button>\\r\\n      </ng-container>\\r\\n      <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"addTab()\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </section>\\r\\n  \", styles: [\".add-tab-button-container{display:flex;margin-left:4px;margin-right:4px;background-color:transparent}.add-tab-button{background-color:transparent;color:#585c5f;border:none;font-size:24px;height:100%;width:2.2rem;font-weight:500;cursor:pointer;box-shadow:-8px 0 0 -7px #0000}.add-tab-button:hover{background-color:#4c4c4c33;color:#585c5f}.tab-container{display:contents;align-items:center;overflow:hidden;white-space:nowrap}.tabs-scroll-container{display:flex;align-items:center;overflow-x:auto;overflow-y:hidden;white-space:nowrap;flex-grow:1}.tabs-scroll-container::-webkit-scrollbar{height:8px}.tabs-scroll-container::-webkit-scrollbar-track{background:#f1f1f1}.tabs-scroll-container::-webkit-scrollbar-thumb{background:#888;border-radius:4px}.tabs-scroll-container::-webkit-scrollbar-thumb:hover{background:#555}button.mat-button{display:flex;align-items:center;border-radius:0}button.mat-button:hover{background-color:#f0f0f0}.focused-tab{background-color:#005cbb;color:#fff!important}mat-icon{margin-left:8px;cursor:pointer}.spacer{flex-grow:1}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 4px)!important;margin-left:var(--mat-text-button-icon-offset, 4px)!important}.close-icon:hover{color:#005cbb;background-color:#fff!important;border-radius:20%}.close-icon{width:20px;height:20px;padding-top:1px;padding-right:1px;float:right}.mat-mdc-button:not(:disabled){display:inline-block}.tab-input{width:75px}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.12rem!important;height:1.12rem!important;width:1.11rem!important}.buttons{display:flex;flex-direction:row;gap:10px;margin-left:8px}.gris-background{background-color:#fff}\\n\"], dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"ngmodule\", type: MatIconModule }, { kind: \"component\", type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"ngmodule\", type: FormsModule }], animations: [\n            trigger('slideIn', [\n                state('void', style({ transform: 'translateY(100%)', opacity: 0 })),\n                transition(':enter', [\n                    animate('300ms ease-out', style({ transform: 'translateY(0)', opacity: 1 }))\n                ]),\n                transition(':leave', [\n                    animate('300ms ease-in', style({ transform: 'translateY(100%)', opacity: 0 }))\n                ])\n            ])\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.7\", ngImport: i0, type: ChromiumInspiredTabsLibComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'chrome-tabs', standalone: true, imports: [\n                        CommonModule,\n                        MatIconModule,\n                        FormsModule\n                    ], animations: [\n                        trigger('slideIn', [\n                            state('void', style({ transform: 'translateY(100%)', opacity: 0 })),\n                            transition(':enter', [\n                                animate('300ms ease-out', style({ transform: 'translateY(0)', opacity: 1 }))\n                            ]),\n                            transition(':leave', [\n                                animate('300ms ease-in', style({ transform: 'translateY(100%)', opacity: 0 }))\n                            ])\n                        ])\n                    ], template: \"<!-- ADD BUTTON TEMPLATE -->\\r\\n<section class=\\\"gris-background\\\">\\r\\n    <div class=\\\"tab-container\\\">\\r\\n      <ng-container *ngFor=\\\"let tab of tabs\\\">\\r\\n        <button mat-button\\r\\n        color=\\\"accent\\\"\\r\\n        type=\\\"button\\\"\\r\\n        [@slideIn]\\r\\n        [ngClass]=\\\"{'focused-tab': tab.id === focusedTabId}\\\"\\r\\n        (click)=\\\"focusTab(tab.id)\\\">\\r\\n        <mat-icon *ngIf=\\\"tab.isHome\\\">home</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isHistory\\\">history</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isFileTypeMappings\\\">auto_awesome</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isDocumentation\\\">info</mat-icon>\\r\\n        <ng-container>\\r\\n          <span>{{ tab.title }}</span>\\r\\n        </ng-container>\\r\\n          <mat-icon class=\\\"close-icon\\\" *ngIf=\\\"!tab.isHome && !tab.isHistory && !tab.isFileTypeMappings && !tab.isDocumentation\\\" (click)=\\\"closeTab(tab.id)\\\">close</mat-icon>\\r\\n        </button>\\r\\n      </ng-container>\\r\\n      <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"addTab()\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </section>\\r\\n  \", styles: [\".add-tab-button-container{display:flex;margin-left:4px;margin-right:4px;background-color:transparent}.add-tab-button{background-color:transparent;color:#585c5f;border:none;font-size:24px;height:100%;width:2.2rem;font-weight:500;cursor:pointer;box-shadow:-8px 0 0 -7px #0000}.add-tab-button:hover{background-color:#4c4c4c33;color:#585c5f}.tab-container{display:contents;align-items:center;overflow:hidden;white-space:nowrap}.tabs-scroll-container{display:flex;align-items:center;overflow-x:auto;overflow-y:hidden;white-space:nowrap;flex-grow:1}.tabs-scroll-container::-webkit-scrollbar{height:8px}.tabs-scroll-container::-webkit-scrollbar-track{background:#f1f1f1}.tabs-scroll-container::-webkit-scrollbar-thumb{background:#888;border-radius:4px}.tabs-scroll-container::-webkit-scrollbar-thumb:hover{background:#555}button.mat-button{display:flex;align-items:center;border-radius:0}button.mat-button:hover{background-color:#f0f0f0}.focused-tab{background-color:#005cbb;color:#fff!important}mat-icon{margin-left:8px;cursor:pointer}.spacer{flex-grow:1}.mat-mdc-button>.mat-icon{margin-right:var(--mat-text-button-icon-spacing, 4px)!important;margin-left:var(--mat-text-button-icon-offset, 4px)!important}.close-icon:hover{color:#005cbb;background-color:#fff!important;border-radius:20%}.close-icon{width:20px;height:20px;padding-top:1px;padding-right:1px;float:right}.mat-mdc-button:not(:disabled){display:inline-block}.tab-input{width:75px}.mat-mdc-button>.mat-icon,.mat-mdc-unelevated-button>.mat-icon,.mat-mdc-raised-button>.mat-icon,.mat-mdc-outlined-button>.mat-icon{display:inline-block;position:relative;vertical-align:top;font-size:1.12rem!important;height:1.12rem!important;width:1.11rem!important}.buttons{display:flex;flex-direction:row;gap:10px;margin-left:8px}.gris-background{background-color:#fff}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { tabs$: [{\n                type: Input\n            }], addTabButtonClick: [{\n                type: Output\n            }], tabClose: [{\n                type: Output\n            }], tabFocus: [{\n                type: Output\n            }] } });\n\n/*\n * Public API Surface of chromium-inspired-tabs-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChromiumInspiredTabsLibComponent, ChromiumInspiredTabsLibService };\n//# sourceMappingURL=chromium-inspired-tabs-lib.mjs.map\n","map":null,"preliminaryFileName":"chromium-inspired-tabs-lib.mjs","sourcemapFileName":"chromium-inspired-tabs-lib.mjs.map"},{"fileName":"chromium-inspired-tabs-lib.mjs.map","names":[],"needsCodeReference":false,"originalFileName":null,"originalFileNames":[],"source":"{\"version\":3,\"file\":\"chromium-inspired-tabs-lib.mjs\",\"sources\":[\"../../../projects/chromium-inspired-tabs-lib/src/lib/chromium-inspired-tabs-lib.service.ts\",\"../../../projects/chromium-inspired-tabs-lib/src/lib/chromium-inspired-tabs-lib.component.ts\",\"../../../projects/chromium-inspired-tabs-lib/src/lib/chromium-inspired-tabs-lib.component.html\",\"../../../projects/chromium-inspired-tabs-lib/src/public-api.ts\",\"../../../projects/chromium-inspired-tabs-lib/src/chromium-inspired-tabs-lib.ts\"],\"sourcesContent\":[\"import { Injectable } from '@angular/core';\\r\\n\\r\\n@Injectable({\\r\\n  providedIn: 'root'\\r\\n})\\r\\nexport class ChromiumInspiredTabsLibService {\\r\\n\\r\\n  constructor() { }\\r\\n}\\r\\n\",\"import { CommonModule } from '@angular/common';\\r\\nimport {\\r\\n  Component,\\r\\n  EventEmitter,\\r\\n  Input,\\r\\n  OnDestroy,\\r\\n  OnInit,\\r\\n  Output\\r\\n} from '@angular/core';\\r\\nimport { MatIconModule } from '@angular/material/icon';\\r\\nimport { trigger, state, style, transition, animate } from '@angular/animations';\\r\\nimport { filter, Observable, Subscription } from 'rxjs';\\r\\nimport { FormsModule } from '@angular/forms';\\r\\n\\r\\ninterface Tab {\\r\\n  id: number;\\r\\n  title: string;\\r\\n  isHome?: boolean;\\r\\n  isHistory?: boolean;\\r\\n  isDocumentation?: boolean;\\r\\n  isFileTypeMappings?: boolean;\\r\\n  componentRef?: any;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: 'chrome-tabs',\\r\\n  templateUrl: './chromium-inspired-tabs-lib.component.html',\\r\\n  styleUrls: ['./chromium-inspired-tabs-lib.component.css'],\\r\\n  standalone: true,\\r\\n  imports: [\\r\\n    CommonModule,\\r\\n    MatIconModule,\\r\\n    FormsModule\\r\\n  ],\\r\\n  animations: [\\r\\n    trigger('slideIn', [\\r\\n      state('void', style({ transform: 'translateY(100%)', opacity: 0 })),\\r\\n      transition(':enter', [\\r\\n        animate('300ms ease-out', style({ transform: 'translateY(0)', opacity: 1 }))\\r\\n      ]),\\r\\n      transition(':leave', [\\r\\n        animate('300ms ease-in', style({ transform: 'translateY(100%)', opacity: 0 }))\\r\\n      ])\\r\\n    ])\\r\\n  ]\\r\\n})\\r\\nexport class ChromiumInspiredTabsLibComponent implements OnInit, OnDestroy {\\r\\n\\r\\n  private subscriptions: Subscription = new Subscription();\\r\\n  public tabs: Tab[] = [];\\r\\n  public focusedTabId: number | null = null;\\r\\n\\r\\n  @Input()\\r\\n  public tabs$: Observable<Tab[]> = new Observable<Tab[]>();\\r\\n\\r\\n  @Output()\\r\\n  public addTabButtonClick: EventEmitter<boolean> = new EventEmitter<boolean>();\\r\\n\\r\\n  @Output()\\r\\n  public tabClose: EventEmitter<number> = new EventEmitter<number>();\\r\\n\\r\\n  @Output()\\r\\n  public tabFocus: EventEmitter<number> = new EventEmitter<number>();\\r\\n\\r\\n  constructor() {\\r\\n  }\\r\\n  \\r\\n  ngOnInit(): void {}\\r\\n\\r\\n  ngAfterViewInit(): void {\\r\\n    this.subscriptions.add(\\r\\n      this.tabs$.subscribe(tabs => {\\r\\n        this.tabs = tabs;\\r\\n      })\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    this.subscriptions.unsubscribe();\\r\\n  }\\r\\n\\r\\n  addTab(): void {\\r\\n    this.addTabButtonClick.emit(true);\\r\\n  }\\r\\n\\r\\n  closeTab(tabId: number): void {\\r\\n    this.tabClose.emit(tabId);\\r\\n  }\\r\\n\\r\\n  focusTab(tabId: number): void {\\r\\n    this.tabFocus.emit(tabId);\\r\\n    this.focusedTabId = tabId;\\r\\n  }\\r\\n\\r\\n  goHome() {\\r\\n    this.focusTab(0);\\r\\n  }\\r\\n\\r\\n}\\r\\n\\r\\n\",\"<!-- ADD BUTTON TEMPLATE -->\\r\\n<section class=\\\"gris-background\\\">\\r\\n    <div class=\\\"tab-container\\\">\\r\\n      <ng-container *ngFor=\\\"let tab of tabs\\\">\\r\\n        <button mat-button\\r\\n        color=\\\"accent\\\"\\r\\n        type=\\\"button\\\"\\r\\n        [@slideIn]\\r\\n        [ngClass]=\\\"{'focused-tab': tab.id === focusedTabId}\\\"\\r\\n        (click)=\\\"focusTab(tab.id)\\\">\\r\\n        <mat-icon *ngIf=\\\"tab.isHome\\\">home</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isHistory\\\">history</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isFileTypeMappings\\\">auto_awesome</mat-icon>\\r\\n        <mat-icon *ngIf=\\\"tab.isDocumentation\\\">info</mat-icon>\\r\\n        <ng-container>\\r\\n          <span>{{ tab.title }}</span>\\r\\n        </ng-container>\\r\\n          <mat-icon class=\\\"close-icon\\\" *ngIf=\\\"!tab.isHome && !tab.isHistory && !tab.isFileTypeMappings && !tab.isDocumentation\\\" (click)=\\\"closeTab(tab.id)\\\">close</mat-icon>\\r\\n        </button>\\r\\n      </ng-container>\\r\\n      <button mat-button color=\\\"accent\\\" type=\\\"button\\\" (click)=\\\"addTab()\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </section>\\r\\n  \",\"/*\\r\\n * Public API Surface of chromium-inspired-tabs-lib\\r\\n */\\r\\n\\r\\nexport * from './lib/chromium-inspired-tabs-lib.service';\\r\\nexport * from './lib/chromium-inspired-tabs-lib.component';\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}